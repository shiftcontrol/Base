**Base** `0.3`


**Revisions:**

	0.1	100812	init
	0.2	100819	dropbox, symlinks, images, reorganized filesystem
	0.3 101005	Header Module, Cache
  

**Note on file structure:**

	/cache		Cache
	/content	Content files
	/static		Css, Javascript and Img files files
	/system		System files
	/views		Template files

	
**Example .htaccess file**

	# Turn on URL rewriting
	RewriteEngine On            

	# Installation directory
	RewriteBase /

	# Protect application and system files from being viewed
	RewriteRule ^(sys|libp|lib/draft|lib/priv|view|cache) - [F,L]

	# Allow any files or directories that exist to be displayed directly
	RewriteCond %{REQUEST_FILENAME} !-f

	# Rewrite all other URLs to index.php/URL
	RewriteRule .* index.php/$0 [PT,L]

  
**Note on Cache:** 

	mkdir cache
	chmod 777 cache

  
**Note on content structure:**

If you want to store your content elsewhere, like in Dropbox, 
place the actual lib folder inside your Dropbox folder and create a symlink from there to here:  
	
	%> ln -s /Users/jorgen/Dropbox/sc_base/lib /Users/jorgen/Sites/sc_base/lib  
  
This way, you sync and share content editing via dropbox :-)  
	
	/lib		Content
	/lib/pub/	WWW accessible content
	

**Note on server config:**  

Apache's "FollowSymLinks" must be on if the the lib folder is outside the site's document root
(if you are using the Dropbox trick above)

	<VirtualHost *:80>
		ServerName	_scbase_db
		DocumentRoot	/Users/jorgen/Sites/sc_base_dev
		<Directory "/Users/jorgen/Sites/sc_base_dev">
		    AllowOverride All
			Options +FollowSymLinks
		</Directory>
	</VirtualHost>

	
**Notes on GIT**

	git add file.txt
	git commit -m "Commit message goes here"
	git push origin
	
	git fetch
	git rebase origin/master

	
###Modules
	Cache
		Built-in.
		Configure in index.php, Set CACHEPATH and CACHELIFE
		CACHELIFE = 0 : Disable
		CACHELIFE > 0 : Lifetime of the cache before its recreated
		r0.3: Added mtime check on the 'source' of the cache, so the
		cache is recreated if the 'source' changes. ('source' is the article (.txt) file)
		
	Header
		Optional
		Enables Plugins (currently used in Media->Unity3d) to add resources to
		the html header (scripts, styles) when needed
		
	Media
		Optional
		Extends the parser to replace certain tags with embed codes for various media-types (Unity3d, Flash, etc...)

---

**TODO**  

	- create a view for "match" that iterates the result from getProps() (also "list")
	+ cache
	- index page
	- body search
	- Templates can include own files? how to do the index page?
	+ Media content / embed-codes for slideshow (many images), flash, movies, unity, java etc -> Markdown?	
	- password protect /seed folder                                                                       
	
	Marcins requests                       
	- cleanup of Core::Populate and Core::respond
	- adding system tags like %permalink% to avoid <?php echo ... ?>
	- directory 'filters' - listing all subdirectories meeting criteria     
		All below might require defining list of possible fields in index.php or sth config file
		a) Just use name of any file field. Would be nice to allow singular form but we can keep it simple. 
		And nobody said I cant have "@tag" field in my data files instead of "@tags"
		- /projects/tags/datavis
		- /projects/clients/zdf
		b) Special case if second param is all numbers, assume using @date in YYYYMMDD format
		- /projects/2010
		c) Pagination using reserved "page" word
		- /projects/page/1                      
		- /projects/tags/datavis/page/2 #more advanced 
   	- cached image resizer
		Automatically capture request for image files jellyfish.jpg?s=800, generate image of given 
		size and cache it. Might require predefined list of accepted sizes for security reasons so 
		nobody will ask for image jellyfish.jpg?s=1000000000000000000
	
